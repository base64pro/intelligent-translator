{"ast":null,"code":"var _jsxFileName = \"D:\\\\intelligent translator\\\\frontend\\\\src\\\\components\\\\settings\\\\AudioSettingsModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FaTimes } from 'react-icons/fa';\nimport { getSetting, upsertSetting } from '../../apiClient'; // <-- NEW: Import API functions\n\n// قائمة مبسطة باللغات الشائعة مع رموزها\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supportedLanguages = [{\n  code: 'auto',\n  name: 'اكتشاف تلقائي (Default)'\n}, {\n  code: 'ar',\n  name: 'العربية'\n}, {\n  code: 'en',\n  name: 'English'\n}, {\n  code: 'fr',\n  name: 'Français'\n}, {\n  code: 'de',\n  name: 'Deutsch'\n}, {\n  code: 'es',\n  name: 'Español'\n}, {\n  code: 'tr',\n  name: 'Türkçe'\n}];\nfunction AudioSettingsModal({\n  closeModal\n}) {\n  _s();\n  const [transcriptionLang, setTranscriptionLang] = useState('auto');\n  const [isLoading, setIsLoading] = useState(true);\n  const [status, setStatus] = useState({\n    message: '',\n    error: false\n  });\n\n  // **UPDATED:** Fetch the saved setting when the modal opens\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const response = await getSetting('transcription_language');\n        if (response.data && response.data.value) {\n          setTranscriptionLang(response.data.value);\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch audio settings\", err);\n        setStatus({\n          message: 'فشل في تحميل الإعدادات الحالية.',\n          error: true\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSettings();\n  }, []);\n\n  // **UPDATED:** Implement the actual save logic\n  const handleSave = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setStatus({\n      message: '',\n      error: false\n    });\n    try {\n      await upsertSetting('transcription_language', transcriptionLang);\n      setStatus({\n        message: 'تم حفظ الإعدادات بنجاح!',\n        error: false\n      });\n      setTimeout(() => closeModal(), 1500);\n    } catch (err) {\n      console.error(\"Failed to save audio settings\", err);\n      setStatus({\n        message: 'فشل في حفظ الإعدادات.',\n        error: true\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0625\\u0639\\u062F\\u0627\\u062F\\u0627\\u062A \\u0627\\u0644\\u0635\\u0648\\u062A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-close-button\",\n          onClick: closeModal,\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), isLoading && !status.message ?\n      /*#__PURE__*/\n      // Show loading only if there's no status message yet\n      _jsxDEV(\"p\", {\n        children: \"\\u062C\\u0627\\u0631\\u064A \\u062A\\u062D\\u0645\\u064A\\u0644 \\u0627\\u0644\\u0625\\u0639\\u062F\\u0627\\u062F\\u0627\\u062A...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"transcription-lang\",\n            children: \"\\u0644\\u063A\\u0629 \\u0627\\u0644\\u0625\\u062F\\u062E\\u0627\\u0644 \\u0627\\u0644\\u0635\\u0648\\u062A\\u064A (Transcription)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"transcription-lang\",\n            value: transcriptionLang,\n            onChange: e => setTranscriptionLang(e.target.value),\n            className: \"form-input\",\n            disabled: isLoading,\n            children: supportedLanguages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lang.code,\n              children: lang.name\n            }, lang.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: \"\\u062A\\u062D\\u062F\\u064A\\u062F \\u0627\\u0644\\u0644\\u063A\\u0629 \\u0645\\u0633\\u0628\\u0642\\u0627\\u064B \\u064A\\u062D\\u0633\\u0646 \\u0645\\u0646 \\u062F\\u0642\\u0629 \\u062A\\u062D\\u0648\\u064A\\u0644 \\u0627\\u0644\\u0635\\u0648\\u062A \\u0625\\u0644\\u0649 \\u0646\\u0635. \\\"\\u0627\\u0644\\u0627\\u0643\\u062A\\u0634\\u0627\\u0641 \\u0627\\u0644\\u062A\\u0644\\u0642\\u0627\\u0626\\u064A\\\" \\u0647\\u0648 \\u0627\\u0644\\u062E\\u064A\\u0627\\u0631 \\u0627\\u0644\\u0627\\u0641\\u062A\\u0631\\u0627\\u0636\\u064A.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button-primary\",\n          disabled: isLoading,\n          children: isLoading ? \"جاري الحفظ...\" : \"حفظ الإعدادات\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), status.message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `status-message ${status.error ? 'error' : ''}`,\n          style: {\n            color: status.error ? '' : 'green'\n          },\n          children: status.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(AudioSettingsModal, \"onXpcD5gBEYjkU72nOkNXj5db0E=\");\n_c = AudioSettingsModal;\nexport default AudioSettingsModal;\nvar _c;\n$RefreshReg$(_c, \"AudioSettingsModal\");","map":{"version":3,"names":["React","useState","useEffect","FaTimes","getSetting","upsertSetting","jsxDEV","_jsxDEV","supportedLanguages","code","name","AudioSettingsModal","closeModal","_s","transcriptionLang","setTranscriptionLang","isLoading","setIsLoading","status","setStatus","message","error","fetchSettings","response","data","value","err","console","handleSave","e","preventDefault","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","id","onChange","target","disabled","map","lang","type","style","color","_c","$RefreshReg$"],"sources":["D:/intelligent translator/frontend/src/components/settings/AudioSettingsModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { getSetting, upsertSetting } from '../../apiClient'; // <-- NEW: Import API functions\r\n\r\n// قائمة مبسطة باللغات الشائعة مع رموزها\r\nconst supportedLanguages = [\r\n  { code: 'auto', name: 'اكتشاف تلقائي (Default)' },\r\n  { code: 'ar', name: 'العربية' },\r\n  { code: 'en', name: 'English' },\r\n  { code: 'fr', name: 'Français' },\r\n  { code: 'de', name: 'Deutsch' },\r\n  { code: 'es', name: 'Español' },\r\n  { code: 'tr', name: 'Türkçe' },\r\n];\r\n\r\nfunction AudioSettingsModal({ closeModal }) {\r\n  const [transcriptionLang, setTranscriptionLang] = useState('auto');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [status, setStatus] = useState({ message: '', error: false });\r\n\r\n  // **UPDATED:** Fetch the saved setting when the modal opens\r\n  useEffect(() => {\r\n    const fetchSettings = async () => {\r\n      try {\r\n        const response = await getSetting('transcription_language');\r\n        if (response.data && response.data.value) {\r\n          setTranscriptionLang(response.data.value);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch audio settings\", err);\r\n        setStatus({ message: 'فشل في تحميل الإعدادات الحالية.', error: true });\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchSettings();\r\n  }, []);\r\n\r\n  // **UPDATED:** Implement the actual save logic\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setStatus({ message: '', error: false });\r\n    \r\n    try {\r\n      await upsertSetting('transcription_language', transcriptionLang);\r\n      setStatus({ message: 'تم حفظ الإعدادات بنجاح!', error: false });\r\n      setTimeout(() => closeModal(), 1500);\r\n    } catch (err) {\r\n      console.error(\"Failed to save audio settings\", err);\r\n      setStatus({ message: 'فشل في حفظ الإعدادات.', error: true });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h2>إعدادات الصوت</h2>\r\n          <button className=\"modal-close-button\" onClick={closeModal}>\r\n            <FaTimes />\r\n          </button>\r\n        </div>\r\n        \r\n        {isLoading && !status.message ? ( // Show loading only if there's no status message yet\r\n          <p>جاري تحميل الإعدادات...</p>\r\n        ) : (\r\n          <form onSubmit={handleSave}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"transcription-lang\">لغة الإدخال الصوتي (Transcription)</label>\r\n              <select \r\n                id=\"transcription-lang\" \r\n                value={transcriptionLang} \r\n                onChange={(e) => setTranscriptionLang(e.target.value)} \r\n                className=\"form-input\"\r\n                disabled={isLoading}\r\n              >\r\n                {supportedLanguages.map(lang => (\r\n                  <option key={lang.code} value={lang.code}>\r\n                    {lang.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <p className=\"description\">\r\n                تحديد اللغة مسبقاً يحسن من دقة تحويل الصوت إلى نص. \"الاكتشاف التلقائي\" هو الخيار الافتراضي.\r\n              </p>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"button-primary\" disabled={isLoading}>\r\n              {isLoading ? \"جاري الحفظ...\" : \"حفظ الإعدادات\"}\r\n            </button>\r\n            {status.message && (\r\n              <p \r\n                className={`status-message ${status.error ? 'error' : ''}`} \r\n                style={{color: status.error ? '' : 'green'}}\r\n              >\r\n                {status.message}\r\n              </p>\r\n            )}\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AudioSettingsModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}